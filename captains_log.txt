First architecture - LeNet like,

model = Sequential()
model.add(Input(shape=IMAGE_SIZE))
model.add(MaxPooling2D(pool_size=(2, 2), strides=2, padding="valid"))
model.add(Conv2D(8, 3, activation='relu'))
model.add(MaxPooling2D(pool_size=(2, 2), strides=2, padding="valid"))
model.add(Conv2D(16, 3, activation='relu'))
model.add(MaxPooling2D(pool_size=(2, 2), strides=2, padding="valid"))
model.add(Conv2D(32, 3, activation='relu'))
model.add(MaxPooling2D(pool_size=(2, 2), strides=2, padding="valid"))
model.add(Conv2D(128, 3, activation='relu'))
model.add(MaxPooling2D(pool_size=(2, 2), strides=2, padding="same"))
model.add(Flatten())
model.add(Dense(32, activation='sigmoid'))
model.add(Dense(1, activation='sigmoid'))
model.compile(loss='mse', optimizer='adam')

Loss on 20 epochs falls fast, but validation does not.

Instead of resizing - just MaxPool (2,2) as the first layer (160*320 pix is too much, the road is much wider)
Then I cut the image to half (first 80 pixels) - and it worked +- fine too!

Then first layer - to Average pooling, and the image cut to bottom half.

Then augment dataset with flipping

Then introduce a Dropout:


model = Sequential()
model.add(Input(shape=IMAGE_SIZE))
model.add(AveragePooling2D(pool_size=(3, 3), strides=2, padding="valid"))
model.add(Dropout(0.2))
model.add(Conv2D(8, 3, activation='relu'))
model.add(MaxPooling2D(pool_size=(2, 2), strides=2, padding="valid"))
model.add(Dropout(0.2))
model.add(Conv2D(16, 3, activation='relu'))
model.add(MaxPooling2D(pool_size=(2, 2), strides=2, padding="valid"))
model.add(Conv2D(32, 3, activation='relu'))
model.add(MaxPooling2D(pool_size=(2, 2), strides=2, padding="valid"))
model.add(Conv2D(128, 3, activation='relu'))
model.add(MaxPooling2D(pool_size=(2, 2), strides=2, padding="same"))
model.add(Flatten())
model.add(Dense(32, activation='sigmoid'))
model.add(Dense(1, activation='sigmoid'))

try running
$ python3 drive.py --model=model/saved_model.h5 --image_folder=output

(venv-rattus) vhavrylov@KVL1912008:~/Free/Udacity/CarND-Behavioral-Cloning-P3$ pip3 install eventlet python-socketio flask

AttributeError: module 'importlib._bootstrap' has no attribute 'SourceFileLoader'

Oops, pip install setuptools --upgrade --> setuptools version conflict among socketio and tensorflow
    fixed: another packet required.
    
    
AttributeError: 'str' object has no attribute 'decode'
    h5py version was 3.1.0, downgrade to 
    rom versions: 2.2.1, 2.3.0b1, 2.3.0, 2.3.1, 2.4.0b1, 2.4.0, 2.5.0, 2.6.0, 2.7.0rc2, 2.7.0, 2.7.1, 2.8.0rc1, 2.8.0, 2.9.0rc1, 2.9.0, 2.10.0, 3.0.0rc1, 3.0.0, 3.1.0
    2.8.0:   ValueError: You are trying to load a weight file containing 6 layers into a model with 0 layers.
    2.9.0: the same error
    2.10.0: the same
    3.0.0:
    
Ah, let's upgrade pip - that helps to install the newest Tensorflow
    yes it helps to load the model file into simulation
    
however, the sim does not connect with the script:
   
    
    2020-12-08 23:24:15.085226: I tensorflow/compiler/xla/service/service.cc:176]   StreamExecutor device (0): Host, Default Version
    NOT RECORDING THIS RUN ...
    (7283) wsgi starting up on http://0.0.0.0:4567
    (7283) accepted ('127.0.0.1', 41925)
    (7283) accepted ('127.0.0.1', 45073)
    127.0.0.1 - - [08/Dec/2020 23:24:44] "GET /socket.io/?EIO=4&transport=websocket HTTP/1.1" 200 0 29.152994
    127.0.0.1 - - [08/Dec/2020 23:24:44] "GET /socket.io/?EIO=4&transport=websocket HTTP/1.1" 200 0 4.530740

Why?


Okay it seems I need to split the model to two pieces, or even avoid generating the model at al.
aha, in the workspace the model seems to be working fine.
Let us also try to use pretrained weights to load into the model.

====== DEC 13

The old/new keras restoring works fine.
But the model always shows +13 deg. angle in the sim - why?

best val on my data ~0.017

added also all 3 image uasge instead of 1 (center).

first dropout 0.3, second 0.2, batch_size=32

overfitting after 15 epoch

BSIZE 128, val_loss < 0.01

F drop 0.5, sec 0.2, BSIZE 128, val_loss < 0.01, epochs 15
    (my_data is about 2118 exaples, while the pretrained is 8000+ )
    all pretrained data do not fit along with augmentation.
    so I use each 4th
        valloss = 0.0117
        
    the car falls off to the ground (second) road. But the bridge and steep turn are ok.
    
        Model: "sequential"
        new model: IMAGE_SIZE = (80, 320, 1)
        _________________________________________________________________
        Layer (type)                 Output Shape              Param #   
        =================================================================
        conv2d (Conv2D)              (None, 78, 318, 8)        80        
        _________________________________________________________________
        max_pooling2d (MaxPooling2D) (None, 39, 159, 8)        0         
        _________________________________________________________________
        conv2d_1 (Conv2D)            (None, 37, 157, 8)        584       
        _________________________________________________________________
        max_pooling2d_1 (MaxPooling2 (None, 18, 78, 8)         0         
        _________________________________________________________________
        dropout (Dropout)            (None, 18, 78, 8)         0         
        _________________________________________________________________
        conv2d_2 (Conv2D)            (None, 16, 76, 16)        1168      
        _________________________________________________________________
        max_pooling2d_2 (MaxPooling2 (None, 8, 38, 16)         0         
        _________________________________________________________________
        conv2d_3 (Conv2D)            (None, 6, 36, 32)         4640      
        _________________________________________________________________
        max_pooling2d_3 (MaxPooling2 (None, 3, 18, 32)         0         
        _________________________________________________________________
        conv2d_4 (Conv2D)            (None, 1, 16, 64)         18496     
        _________________________________________________________________
        dropout_1 (Dropout)          (None, 1, 16, 64)         0         
        _________________________________________________________________
        max_pooling2d_4 (MaxPooling2 (None, 1, 8, 64)          0         
        _________________________________________________________________
        flatten (Flatten)            (None, 512)               0         
        _________________________________________________________________
        dense (Dense)                (None, 32)                16416     
        _________________________________________________________________
        dense_1 (Dense)              (None, 1)                 33        
        =================================================================
        Total params: 41,417
        Trainable params: 41,417
        Non-trainable params: 0

^^ a grayscale, relatively deep model.
    -->> very long training, and val loss dropping badly.
    
discarded, now using AvgPool as before, as the first layer:

        Model: "sequential"
        _________________________________________________________________
        Layer (type)                 Output Shape              Param #   
        =================================================================
        average_pooling2d (AveragePo (None, 39, 159, 1)        0         
        _________________________________________________________________
        conv2d (Conv2D)              (None, 37, 157, 8)        80        
        _________________________________________________________________
        max_pooling2d (MaxPooling2D) (None, 18, 78, 8)         0         
        _________________________________________________________________
        dropout (Dropout)            (None, 18, 78, 8)         0         
        _________________________________________________________________
        conv2d_1 (Conv2D)            (None, 16, 76, 16)        1168      
        _________________________________________________________________
        max_pooling2d_1 (MaxPooling2 (None, 8, 38, 16)         0         
        _________________________________________________________________
        conv2d_2 (Conv2D)            (None, 6, 36, 32)         4640      
        _________________________________________________________________
        max_pooling2d_2 (MaxPooling2 (None, 3, 18, 32)         0         
        _________________________________________________________________
        conv2d_3 (Conv2D)            (None, 1, 16, 64)         18496     
        _________________________________________________________________
        dropout_1 (Dropout)          (None, 1, 16, 64)         0         
        _________________________________________________________________
        max_pooling2d_3 (MaxPooling2 (None, 1, 8, 64)          0         
        _________________________________________________________________
        flatten (Flatten)            (None, 512)               0         
        _________________________________________________________________
        dense (Dense)                (None, 32)                16416     
        _________________________________________________________________
        dense_1 (Dense)              (None, 1)                 33        
        =================================================================
        Total params: 40,833
        Trainable params: 40,833
        Non-trainable params: 0


No, here's a model that still utilizes the whole dataset in GRAY but
also aads some correction for left/right images
and added some Dense layers:

        =================================================================
        average_pooling2d (AveragePo (None, 29, 159, 1)        0         
        _________________________________________________________________
        conv2d (Conv2D)              (None, 27, 157, 8)        80        
        _________________________________________________________________
        max_pooling2d (MaxPooling2D) (None, 14, 79, 8)         0         
        _________________________________________________________________
        dropout (Dropout)            (None, 14, 79, 8)         0         
        _________________________________________________________________
        conv2d_1 (Conv2D)            (None, 12, 77, 16)        1168      
        _________________________________________________________________
        max_pooling2d_1 (MaxPooling2 (None, 6, 39, 16)         0         
        _________________________________________________________________
        conv2d_2 (Conv2D)            (None, 4, 37, 32)         4640      
        _________________________________________________________________
        max_pooling2d_2 (MaxPooling2 (None, 2, 19, 32)         0         
        _________________________________________________________________
        conv2d_3 (Conv2D)            (None, 2, 19, 64)         18496     
        _________________________________________________________________
        max_pooling2d_3 (MaxPooling2 (None, 1, 10, 64)         0         
        _________________________________________________________________
        dropout_1 (Dropout)          (None, 1, 10, 64)         0         
        _________________________________________________________________
        flatten (Flatten)            (None, 640)               0         
        _________________________________________________________________
        dense (Dense)                (None, 64)                41024     
        _________________________________________________________________
        dense_1 (Dense)              (None, 64)                4160      
        _________________________________________________________________
        dense_2 (Dense)              (None, 1)                 65        
        =================================================================
        Total params: 69,633
        Trainable params: 69,633
        Non-trainable params: 0

        2411/2411 [==============================] - 10s 4ms/step - loss: 0.0087 - val_loss: 0.0114

    ^^ checking in the field...
    
    
python video.py run1    install ffmpeg to the environment    update --fix-missing

sudo apt-get update --fix-missing
sudo apt-get install ffmpeg

Yes, the pre-recorded data does NOT include the "advanced" challenge. So if I gather more, it could be really useful
Now added my "Advanced" data to the precollected data 


        Layer (type)                 Output Shape              Param #   
        =================================================================
        average_pooling2d (AveragePo (None, 30, 160, 1)        0         
        _________________________________________________________________
        conv2d (Conv2D)              (None, 28, 158, 8)        80        
        _________________________________________________________________
        max_pooling2d (MaxPooling2D) (None, 14, 79, 8)         0         
        _________________________________________________________________
        dropout (Dropout)            (None, 14, 79, 8)         0         
        _________________________________________________________________
        conv2d_1 (Conv2D)            (None, 12, 77, 16)        1168      
        _________________________________________________________________
        max_pooling2d_1 (MaxPooling2 (None, 6, 39, 16)         0         
        _________________________________________________________________
        conv2d_2 (Conv2D)            (None, 4, 37, 32)         4640      
        _________________________________________________________________
        max_pooling2d_2 (MaxPooling2 (None, 2, 19, 32)         0         
        _________________________________________________________________
        conv2d_3 (Conv2D)            (None, 2, 19, 64)         18496     
        _________________________________________________________________
        max_pooling2d_3 (MaxPooling2 (None, 1, 10, 64)         0         
        _________________________________________________________________
        dropout_1 (Dropout)          (None, 1, 10, 64)         0         
        _________________________________________________________________
        flatten (Flatten)            (None, 640)               0         
        _________________________________________________________________
        dense (Dense)                (None, 64)                41024     
        _________________________________________________________________
        dense_1 (Dense)              (None, 64)                4160      
        _________________________________________________________________
        dense_2 (Dense)              (None, 1)                 65        
        =================================================================
        Total params: 69,633
        Trainable params: 69,633

        model = Sequential()
        model.add(AveragePooling2D(input_shape=IMAGE_SIZE, pool_size=(2, 2), strides=2, padding="valid"))
        model.add(Conv2D(8, 3, input_shape=IMAGE_SIZE, activation='relu'))
        model.add(MaxPooling2D(pool_size=(2, 2), strides=2, padding="same"))
        model.add(Dropout(0.25))
        model.add(Conv2D(16, 3, activation='relu'))
        model.add(MaxPooling2D(pool_size=(2, 2), strides=2, padding="same"))
        model.add(Conv2D(32, 3, activation='relu'))
        model.add(MaxPooling2D(pool_size=(2, 2), strides=2, padding="same"))
        model.add(Conv2D(64, 3, activation='relu', padding="same"))
        model.add(MaxPooling2D(pool_size=(2, 2), strides=2, padding="same"))
        model.add(Dropout(0.2))
        model.add(Flatten())
        model.add(Dense(64, activation='relu'))
        model.add(Dense(64, activation='relu'))
        model.add(Dense(1, activation='sigmoid'))
        
    training on batch 128, 22GB RAM occupied
    it crashes!
    
retrain using half of the ALL the available data during 50 epochs with batch 64.:

        Model: "sequential"
        _________________________________________________________________
        Layer (type)                 Output Shape              Param #   
        =================================================================
        average_pooling2d (AveragePo (None, 29, 159, 1)        0         
        _________________________________________________________________
        conv2d (Conv2D)              (None, 27, 157, 8)        80        
        _________________________________________________________________
        max_pooling2d (MaxPooling2D) (None, 14, 79, 8)         0         
        _________________________________________________________________
        dropout (Dropout)            (None, 14, 79, 8)         0         
        _________________________________________________________________
        conv2d_1 (Conv2D)            (None, 12, 77, 16)        1168      
        _________________________________________________________________
        max_pooling2d_1 (MaxPooling2 (None, 6, 39, 16)         0         
        _________________________________________________________________
        conv2d_2 (Conv2D)            (None, 4, 37, 32)         4640      
        _________________________________________________________________
        max_pooling2d_2 (MaxPooling2 (None, 2, 19, 32)         0         
        _________________________________________________________________
        conv2d_3 (Conv2D)            (None, 2, 19, 64)         18496     
        _________________________________________________________________
        max_pooling2d_3 (MaxPooling2 (None, 1, 10, 64)         0         
        _________________________________________________________________
        dropout_1 (Dropout)          (None, 1, 10, 64)         0         
        _________________________________________________________________
        flatten (Flatten)            (None, 640)               0         
        _________________________________________________________________
        dense (Dense)                (None, 64)                41024     
        _________________________________________________________________
        dense_1 (Dense)              (None, 64)                4160      
        _________________________________________________________________
        dense_2 (Dense)              (None, 1)                 65        
        =================================================================
        Total params: 69,633
        Trainable params: 69,633
        Non-trainable params: 0

        model = Sequential()
        model.add(AveragePooling2D(input_shape=IMAGE_SIZE, pool_size=(3, 3), strides=2, padding="valid"))
        model.add(Conv2D(8, 3, input_shape=IMAGE_SIZE, activation='relu'))
        model.add(MaxPooling2D(pool_size=(2, 2), strides=2, padding="same"))
        model.add(Dropout(0.25))
        model.add(Conv2D(16, 3, activation='relu'))
        model.add(MaxPooling2D(pool_size=(2, 2), strides=2, padding="same"))
        model.add(Conv2D(32, 3, activation='relu'))
        model.add(MaxPooling2D(pool_size=(2, 2), strides=2, padding="same"))
        model.add(Conv2D(64, 3, activation='relu', padding="same"))
        model.add(MaxPooling2D(pool_size=(2, 2), strides=2, padding="same"))
        model.add(Dropout(0.2))
        model.add(Flatten())
        model.add(Dense(64, activation='relu'))
        model.add(Dense(64, activation='relu'))
        model.add(Dense(1, activation='sigmoid'))
    on bsize 64:
    Epoch 50/50
    404/404 [==============================] - 7s 18ms/step - loss: 0.0100 - val_loss: 0.0169


    41k weights:
  model = Sequential()
    model.add(AveragePooling2D(input_shape=IMAGE_SIZE, pool_size=(3, 3), strides=2, padding="valid"))
    #model.add(Conv2D(8, 3, input_shape=IMAGE_SIZE, activation='relu'))
    #model.add(MaxPooling2D(pool_size=(2, 2), strides=2, padding="valid"))
    model.add(Conv2D(16, 3, input_shape=IMAGE_SIZE, activation='relu'))
    model.add(MaxPooling2D(pool_size=(2, 2), strides=2, padding="same"))
    model.add(Dropout(0.2))
    model.add(Conv2D(16, 3, activation='relu'))
    model.add(MaxPooling2D(pool_size=(2, 2), strides=2, padding="same"))
    model.add(Conv2D(32, 3, activation='relu'))
    model.add(MaxPooling2D(pool_size=(2, 2), strides=2, padding="same"))
    model.add(Conv2D(32, 3, activation='relu', padding="same"))
    model.add(MaxPooling2D(pool_size=(2, 2), strides=2, padding="same"))
    model.add(Dropout(0.2))
    model.add(Flatten())
    model.add(Dense(64, activation='relu'))
    model.add(Dense(64, activation='relu'))
    model.add(Dense(1, activation='sigmoid'))
    model.compile(loss='mse', optimizer='adam')
    
    val loss falls more stable but only first 3-4 epochs (batch==200)
    
    
    
    model = Sequential()
    #model.add(AveragePooling2D(input_shape=IMAGE_SIZE, pool_size=(3, 3), strides=2, padding="valid"))
    model.add(Conv2D(8, 3, input_shape=IMAGE_SIZE, activation='relu'))
    model.add(MaxPooling2D(pool_size=(2, 2), strides=2, padding="valid"))
    model.add(Conv2D(16, 3, input_shape=IMAGE_SIZE, activation='relu'))
    model.add(MaxPooling2D(pool_size=(2, 2), strides=2, padding="same"))
    model.add(Dropout(0.2))
    model.add(Conv2D(16, 3, activation='relu'))
    model.add(MaxPooling2D(pool_size=(2, 2), strides=2, padding="same"))
    model.add(Conv2D(32, 3, activation='relu'))
    model.add(MaxPooling2D(pool_size=(2, 2), strides=2, padding="same"))
    model.add(Conv2D(32, 3, activation='relu', padding="same"))
    model.add(MaxPooling2D(pool_size=(2, 2), strides=2, padding="same"))
    model.add(Dropout(0.2))
    model.add(Flatten())
    model.add(Dense(64, activation='relu'))
    model.add(Dense(64, activation='relu'))
    model.add(Dense(1, activation='sigmoid'))
    model.compile(loss='mse', optimizer='adam')
    + batch size 512
        valloss jumps
        
    let's try larger Dropout == 2x0.5 - dynamics not bad.
    However let's try on smaller batches, as there are a lot of mem errors.
    
    model.add(Conv2D(8, 3, input_shape=IMAGE_SIZE, activation='relu'))
    model.add(MaxPooling2D(pool_size=(2, 2), strides=2, padding="valid"))
    model.add(Dropout(0.5))
    model.add(Conv2D(16, 3, activation='relu'))
    model.add(MaxPooling2D(pool_size=(2, 2), strides=2, padding="same"))
    model.add(Conv2D(16, 3, activation='relu'))
    model.add(MaxPooling2D(pool_size=(2, 2), strides=2, padding="same"))
    model.add(Conv2D(32, 3, activation='relu'))
    model.add(MaxPooling2D(pool_size=(2, 2), strides=2, padding="same"))
    model.add(Conv2D(32, 3, activation='relu', padding="same"))
    model.add(MaxPooling2D(pool_size=(2, 2), strides=2, padding="same"))
    model.add(Dropout(0.5))
    model.add(Flatten())
    model.add(Dense(64, activation='relu'))
    model.add(Dense(64, activation='relu'))
    model.add(Dense(1, activation='sigmoid'))
    model.compile(loss='mse', optimizer='adam')
    + D0.5 0.5, batch 400, 10 epochs - mem errors
    batch 64, 10 epochs:   (201217-2252-)
        drives almost fine but strikes a piece of the trace.
        
        
    model = Sequential()
    model.add(Conv2D(4, 3, input_shape=IMAGE_SIZE, activation='relu'))
    model.add(MaxPooling2D(pool_size=(2, 2), strides=2, padding="valid"))
    model.add(Dropout(0.5))
    model.add(Conv2D(8, 3, activation='relu'))
    model.add(MaxPooling2D(pool_size=(2, 2), strides=2, padding="valid"))
    model.add(Conv2D(16, 3, activation='relu'))
    model.add(MaxPooling2D(pool_size=(2, 2), strides=2, padding="valid"))
    model.add(Conv2D(32, 3, activation='relu'))
    model.add(MaxPooling2D(pool_size=(2, 2), strides=2, padding="valid"))
    model.add(Conv2D(32, 3, activation='relu', padding="same"))
    model.add(MaxPooling2D(pool_size=(2, 2), strides=2, padding="valid"))
    model.add(Dropout(0.5))
    model.add(Flatten())
    model.add(Dense(64, activation='relu'))
    model.add(Dense(64, activation='relu'))
    model.add(Dense(1, activation='sigmoid'))
    model.compile(loss='mse', optimizer='adam')
        batch 64, 10 epochs. And image is again the bottom half! (all)
        
    and retrained using a better image cropping: [60:140] instead of [80:160] -- more valuable info there.
    
    
    
    git config --global user.email "khaemn@gmail.com" && git config --global user.name "Volodymyr Havrylov"
    
    the model drives too to the right in "fantastic" mode, but overall movement is ok.
        no! drives badly.
        
        
    model = Sequential()
    model.add(AveragePooling2D(input_shape=IMAGE_SIZE, pool_size=(3, 3), strides=2, padding="valid"))
    model.add(Conv2D(8, 3, activation='relu'))
    model.add(MaxPooling2D(pool_size=(2, 2), strides=2, padding="valid"))
    model.add(Dropout(0.2))
    model.add(Conv2D(16, 3, activation='relu'))
    model.add(MaxPooling2D(pool_size=(2, 2), strides=2, padding="valid"))
    model.add(Conv2D(32, 3, activation='relu'))
    model.add(MaxPooling2D(pool_size=(2, 2), strides=2, padding="valid"))
    model.add(Conv2D(32, 3, activation='relu', padding="same"))
    model.add(MaxPooling2D(pool_size=(2, 2), strides=2, padding="valid"))
    model.add(Dropout(0.2))
    model.add(Flatten())
    model.add(Dense(64, activation='relu'))
    model.add(Dense(64, activation='relu'))
    model.add(Dense(1, activation='sigmoid'))
    model.compile(loss='mse', optimizer='adam')
            batch 64, 12 epochs. Enhanced image., steering correction 0.15, smaller dropout
        bridge and ground passed fine!
        38k weights - not so much, eh?
    let it be this, nothing more necessary.
    yes, 2 loops without problem -- good enough, let it be.
    
    
    
    model visualization
        pip install pydot graphviz
        sudo apt-get install graphviz
    https://stackoverflow.com/questions/47605558/importerror-failed-to-import-pydot-you-must-install-pydot-and-graphviz-for-py
    
    
    
TODO:

++  make a model.h5 from weights, and also make a restored model.
    I think I can juist convert only a model.h5 to the old-Keras format, but also present the weights.
    
    
*  use Generators to load files -- otherwise it contradicts the Rubric. :(




At the env list is:
a875111:/home/workspace# pip list
Package                       Version    
----------------------------- -----------
alabaster                     0.7.12     
alembic                       0.8.10     
altair                        1.2.1      
apache-airflow                1.10.2     
asn1crypto                    0.22.0     
atari-py                      0.1.7      
atomicwrites                  1.3.0      
attrs                         19.1.0     
audioread                     2.1.6      
av                            0.3.3      
aws-xray-sdk                  0.95       
awscli                        1.16.17    
Babel                         2.8.0      
backcall                      0.1.0      
backports.functools-lru-cache 1.4        
backports.weakref             1.0rc1     
bcrypt                        3.2.0      
beautifulsoup4                4.6.0      
bleach                        2.1.4      
blinker                       1.4        
bokeh                         0.12.13    
boto                          2.48.0     
boto3                         1.7.84     
botocore                      1.10.84    
Box2D                         2.3.2      
Box2D-kengz                   2.3.3      
bresenham                     0.2        
bz2file                       0.98       
cachetools                    4.1.1      
cassandra-driver              3.11.0     
certifi                       2019.11.28 
cffi                          1.11.2     
cgroupspy                     0.1.6      
chardet                       3.0.4      
click                         6.7        
cloudpickle                   0.2.2      
colorama                      0.3.9      
colour                        0.1.5      
conda                         4.6.14     
configparser                  3.5.3      
cookies                       2.2.1      
croniter                      0.3.34     
cryptography                  2.1.4      
cycler                        0.10.0     
Cython                        0.29.7     
cytoolz                       0.9.0.1    
dask                          0.16.1     
decorator                     4.0.11     
defusedxml                    0.5.0      
dill                          0.2.7.1    
docker                        4.3.1      
docutils                      0.14       
dronekit                      2.9.2      
ecdsa                         0.16.0     
entrypoints                   0.2.3      
enum34                        1.1.10     
et-xmlfile                    1.0.1      
eventlet                      0.22.0     
fastcache                     1.0.2      
Flask                         0.12.5     
Flask-Admin                   1.5.2      
Flask-AppBuilder              1.12.1     
Flask-Babel                   0.12.2     
Flask-Bcrypt                  0.7.1      
Flask-Caching                 1.3.3      
Flask-Login                   0.4.1      
Flask-OpenID                  1.2.5      
Flask-SocketIO                2.9.2      
Flask-SQLAlchemy              2.4.4      
flask-swagger                 0.2.13     
Flask-WTF                     0.14.3     
freezegun                     1.0.0      
funcsigs                      1.0.0      
future                        0.16.0     
gensim                        3.4.0      
gevent                        20.6.2     
gitdb                         4.0.5      
GitPython                     3.1.8      
glfw                          1.8.0      
google-auth                   1.21.2     
greenlet                      0.4.12     
gunicorn                      19.10.0    
gym                           0.9.6      
h5py                          2.7.1      
heapdict                      1.0.0      
hmsclient                     0.1.1      
html2text                     2018.1.9   
html5lib                      1.1        
idna                          2.6        
imageio                       2.1.2      
imagesize                     1.2.0      
importlib-metadata            1.7.0      
inflection                    0.5.1      
ipykernel                     4.9.0      
ipython                       6.5.0      
ipython-genutils              0.2.0      
ipython-sql                   0.3.9      
ipywidgets                    7.0.5      
iso8601                       0.1.13     
itsdangerous                  0.24       
jdc                           0.0.8      
jdcal                         1.3        
jedi                          0.10.2     
jieba                         0.39       
Jinja2                        2.10       
jira                          2.0.0      
jmespath                      0.9.3      
joblib                        0.11       
json-merge-patch              0.2        
json5                         0.8.5      
jsondiff                      1.1.1      
jsonpickle                    1.4.1      
jsonschema                    2.6.0      
jupyter-client                5.2.4      
jupyter-core                  4.4.0      
jupyterlab                    1.0.9      
jupyterlab-server             1.0.0      
Keras                         2.0.9      
kubernetes                    11.0.0     
librosa                       0.5.1      
llvmlite                      0.20.0     
locket                        0.2.0      
lockfile                      0.12.2     
lxml                          4.1.1      
Mako                          1.0.7      
Markdown                      2.6.9      
MarkupSafe                    1.0        
matplotlib                    2.1.0      
mistune                       0.8.3      
mock                          2.0.0      
mongomock                     3.20.0     
monotonic                     1.3        
more-itertools                7.0.0      
moto                          1.3.5      
moviepy                       0.2.3.2    
msgpack                       0.5.6      
msgpack-python                0.4.8      
mujoco-py                     1.50.1.59  
mysqlclient                   2.0.1      
natsort                       7.0.1      
nbconvert                     5.4.0      
nbformat                      4.4.0      
nbzip                         0.1.0      
networkx                      1.11       
nltk                          3.2.5      
nose                          1.3.7      
nose-ignore-docstring         0.2        
nose-timer                    1.0.0      
notebook                      5.7.0      
ntlm-auth                     1.5.0      
numba                         0.35.0     
numexpr                       2.6.4      
numpy                         1.12.1     
oauthlib                      2.0.6      
olefile                       0.44       
openpyxl                      2.5.0b1    
ordereddict                   1.1        
packaging                     16.8       
pandas                        0.23.3     
pandocfilters                 1.4.1      
parameterized                 0.7.4      
paramiko                      2.7.2      
parso                         0.4.0      
partd                         0.3.8      
patsy                         0.4.1      
pbr                           3.1.1      
pendulum                      1.4.4      
pexpect                       4.3.1      
pickleshare                   0.7.4      
Pillow                        5.2.0      
pinyin                        0.4.0      
pip                           18.1       
plotly                        2.0.15     
pluggy                        0.11.0     
pomegranate                   0.9.0      
prettytable                   0.7.2      
prometheus-client             0.3.1      
prompt-toolkit                1.0.15     
protobuf                      3.5.1      
psutil                        5.4.0      
psycopg2                      2.7.4      
ptyprocess                    0.5.2      
py                            1.8.0      
py4j                          0.10.7     
pyaml                         20.4.0     
pyasn1                        0.4.8      
pyasn1-modules                0.2.8      
pycosat                       0.6.3      
pycparser                     2.18       
pycryptodome                  3.9.8      
pycurl                        7.43.0     
pydot                         1.2.4      
pydotplus                     2.0.2      
pyglet                        1.3.0      
Pygments                      2.2.0      
pygpu                         0.7.5      
PyHive                        0.6.3      
PyJWT                         1.5.3      
pymavlink                     2.2.20     
pymc3                         3.2        
PyNaCl                        1.4.0      
PyOpenGL                      3.1.0      
pyOpenSSL                     17.4.0     
pyparsing                     2.2.0      
pyrsistent                    0.15.2     
pysftp                        0.2.9      
PySocks                       1.6.8      
pyspark                       2.4.3      
pytest                        4.5.0      
python-crfsuite               0.9.2      
python-daemon                 2.1.2      
python-dateutil               2.6.1      
python-editor                 1.0.4      
python-engineio               2.0.2      
python-jose                   2.0.2      
python-nvd3                   0.15.0     
python-slugify                4.0.1      
python-socketio               1.8.4      
python-speech-features        0.6        
python3-openid                3.2.0      
pytz                          2017.3     
pytzdata                      2020.1     
PyWavelets                    0.5.2      
pywinrm                       0.4.1      
PyYAML                        3.12       
pyzmq                         17.1.2     
qds-sdk                       1.16.0     
rednose                       1.3.0      
requests                      2.24.0     
requests-mock                 1.8.0      
requests-ntlm                 1.1.0      
requests-oauthlib             0.8.0      
requests-toolbelt             0.9.1      
resampy                       0.2.0      
responses                     0.12.0     
rsa                           3.4.2      
ruamel-yaml                   0.11.14    
s3transfer                    0.1.13     
scikit-image                  0.14.2     
scikit-learn                  0.19.1     
scipy                         1.2.1      
seaborn                       0.8.1      
SeekWell                      0.1        
Send2Trash                    1.5.0      
sentinels                     1.0.0      
setproctitle                  1.1.10     
setuptools                    38.4.0     
Shapely                       1.6.4.post1
simplegeneric                 0.8.1      
SimpleWebSocketServer         0.1.1      
six                           1.11.0     
smart-open                    1.5.6      
smmap                         3.0.4      
snakebite                     2.11.0     
snowballstemmer               2.0.0      
snownlp                       0.12.3     
SoundFile                     0.9.0.post1
Sphinx                        3.2.1      
sphinx-argparse               0.2.5      
Sphinx-PyPI-upload            0.2.1      
sphinx-rtd-theme              0.5.0      
sphinxcontrib-applehelp       1.0.2      
sphinxcontrib-devhelp         1.0.2      
sphinxcontrib-htmlhelp        1.0.3      
sphinxcontrib-httpdomain      1.7.0      
sphinxcontrib-jsmath          1.0.1      
sphinxcontrib-qthelp          1.0.3      
sphinxcontrib-serializinghtml 1.1.4      
SQLAlchemy                    1.2.19     
sqlparse                      0.3.0      
statsmodels                   0.8.0      
sympy                         1.0        
tabulate                      0.8.2      
tenacity                      4.8.0      
tensorflow                    1.3.0      
terminado                     0.8.1      
termstyle                     0.1.11     
testpath                      0.3.1      
text-unidecode                1.3        
Theano                        1.0.1      
thrift                        0.13.0     
toolz                         0.8.2      
torch                         0.4.0      
torchvision                   0.2.1      
tornado                       4.5.3      
tqdm                          4.11.2     
traitlets                     4.3.2      
tweepy                        3.5.0      
twython                       3.6.0      
tzlocal                       2.1        
udacity-pa                    0.2.9      
unicodecsv                    0.14.1     
urllib3                       1.22       
utm                           0.4.2      
uvloop                        0.8.1      
vega                          0.4.4      
vincent                       0.4.4      
wcwidth                       0.1.7      
webencodings                  0.5        
websocket-client              0.57.0     
websockets                    4.0.1      
Werkzeug                      0.14.1     
wheel                         0.30.0     
widgetsnbextension            3.1.0      
wordcloud                     1.4.1      
wptools                       0.4.7      
wrapt                         1.12.1     
WTForms                       2.3.3      
xlrd                          1.1.0      
xmltodict                     0.12.0     
zipp                          3.1.0      
zope.deprecation              4.4.0      
zope.event                    4.5.0      
zope.interface                5.1.0  



The model is nonfunctional now! Any other ideas? Less epochs?
    steering 0.1, batch 16 (*3*2) 12 epochs
    539/539 [==============================] - 55s 102ms/step - loss: 0.0228 - val_loss: 0.0185
    Epoch 2/12
    539/539 [==============================] - 48s 89ms/step - loss: 0.0172 - val_loss: 0.0147
    Epoch 3/12
    539/539 [==============================] - 48s 89ms/step - loss: 0.0156 - val_loss: 0.0139
    Epoch 4/12
    539/539 [==============================] - 45s 84ms/step - loss: 0.0146 - val_loss: 0.0131
    Epoch 5/12

    FUCK!!!! FUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU
    it does not work again.
    
    steering 0.12, dropout 2*0.25, batch 128 (*6), 20 epochs
    
    NO!!!! IT DOES NOT FUCKING WORK!!!!!! FUCK~! FUCK IT ALLLLL!!!!!!!
    
    
    retrained with only=track=one data.
    
    10 epochs of BS 16 (*6) on ALL images but from CORECT data
    God damn this fucking generator, and all its shithead friends. I had a working model before and now it is fubar.
    
It does not work. It's all, it's ok. Just down the drain all the fucking thing. Not good... 

    retrained on batch size 8 (*6), 10 epochs, steering correction 0.18
     --ne, pizda.
     
 okay. steering 0.25, retrain,  batch 8(*6), expand)dims_2  15 epochs
    goes after the bridge and fails.


